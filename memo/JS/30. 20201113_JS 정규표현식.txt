@ 정규표현식
-> 정규식은 특정한 규칙을 가진 문자열의 집합을 표현하는데 사용하는 형식 언어
-> 많은 텍스트 편집기와 프로그래밍 언어에서 문자열의 검색과 치환을 위해 지원하고 있음
-> 정규 표현식에서 사용하는 기호를 Meta 문자라고 함
	- Meta 문자는 어떠한 의미가 부여된 문자
-> 실질적으로 유효성을 체크할때 혹은 크롤링 등에서 정규표현식이 많이 사용 됨
-> 정규표현식은 다양한 표현 방법이 존재 
	-> 기본적인 것은 비슷하지만 확장 여부 및 사용 플랫폼에 따라 다를 수 있음

@ 정규표현식을 사용하는 방법
-> 정규표현식은 2가지를 이용하여 사용 할 수 있음

1. RegExp	 객체를 이용하는 방법
	var regExp = new RegExp('정규표현식',['Flag']);

2. 객체초기화를 사용하는 방법
	var objectInitilaizer	= /정규표현식/[Flag];

@ Flag의 종류
-> Flag는 사용해도 되고 사용하지 않아도 됨 (선택사항)

g	Global		문자열 내의 모든 패턴을 찾음
i	Ignore Case	문자열의 대소문자를 구별하지 않음
m	Multi Line	문자열이 행이 바뀌어도 찾음

@ 기본 정규 표현식

^		라인의 시작
$		라인의 끝
.		모든 단일 문자
[]		대괄호 사이에 존재하는 문자들 중 하나 일치
?		2가지 의미가 있음
		- 앞에 존재하는 문자가 있을수도, 없을수도 있을 때 사용
			-> {0,1}과 동일
		- 수량자(*,+,?,{})뒤에 사용한다면 최단검색의 의미
{}		횟수를 작성하여 반복 (수량자)
*		0회 이상 반복되는 앞선 문자 일치 (수량자)
+		1회 이상 반복되는 앞선 문자 일치 (수량자)
()		그룹화

@ 정규식의 사용되는 메소드
-> test	: 일치하는 문자열을 검사할때 사용
	- true 나 false를 리턴
-> exec	: 일치하는 문자열을 찾을 때 사용
	- 정보를 가지고 있는 배열을 반환
-> replace : 일치하는 문자열을 찾아 대체할 때 사용
