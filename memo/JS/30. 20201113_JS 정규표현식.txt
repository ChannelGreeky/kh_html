@ 정규표현식
-> 정규식은 특정한 규칙을 가진 문자열의 집합을 표현하는데 사용하는 형식 언어
-> 많은 텍스트 편집기와 프로그래밍 언어에서 문자열의 검색과 치환을 위해 지원하고 있음
-> 정규 표현식에서 사용하는 기호를 Meta 문자라고 함
	- Meta 문자는 어떠한 의미가 부여된 문자
-> 실질적으로 유효성을 체크할때 혹은 크롤링 등에서 정규표현식이 많이 사용 됨
-> 정규표현식은 다양한 표현 방법이 존재 
	-> 기본적인 것은 비슷하지만 확장 여부 및 사용 플랫폼에 따라 다를 수 있음

@ 정규표현식을 사용하는 방법
-> 정규표현식은 2가지를 이용하여 사용 할 수 있음

1. RegExp	 객체를 이용하는 방법
	var regExp = new RegExp('정규표현식',['Flag']);

2. 객체초기화를 사용하는 방법
	var objectInitilaizer	= /정규표현식/[Flag];

@ Flag의 종류
-> Flag는 사용해도 되고 사용하지 않아도 됨 (선택사항)

g	Global		문자열 내의 모든 패턴을 찾음
i	Ignore Case	문자열의 대소문자를 구별하지 않음
m	Multi Line	문자열이 행이 바뀌어도 찾음

@ 기본 정규 표현식

^		라인의 시작
$		라인의 끝
.		모든 단일 문자
[]		대괄호 사이에 존재하는 문자들 중 하나 일치
?		2가지 의미가 있음
		- 앞에 존재하는 문자가 있을수도, 없을수도 있을 때 사용
			-> {0,1}과 동일
		- 수량자(*,+,?,{})뒤에 사용한다면 최단검색의 의미
{}		횟수를 작성하여 반복 (수량자)
*		0회 이상 반복되는 앞선 문자 일치 (수량자)
+		1회 이상 반복되는 앞선 문자 일치 (수량자)
()		그룹화

@ 정규식의 사용되는 메소드
-> test	: 일치하는 문자열을 검사할때 사용
	- true 나 false를 리턴
-> exec	: 일치하는 문자열을 찾을 때 사용
	- 정보를 가지고 있는 배열을 반환
-> replace : 일치하는 문자열을 찾아 대체할 때 사용

##  ? 사용하기 ##
HelloWorld 이거나 Hello World 이거나를 탐색하는 경우

    <script>
        function check(){
            var userId = document.getElementById("userId").value;
            var exp = /Hello ?World/; 
            if(exp.test(userId)){
                alert("검증되었습니다.");
            }else{
                alert("정규표현식에 어긋납니다.");
            }
        }
    </script>
    
    id : <input type="text" id="userId" />
    <button onclick="check();">체크</button>


## (  ) 그룹화 사용하기 ##
-> Hello  World 이거나 HelloWorld 이거나를 찾을때
    <script>
        function check(){
            var userId = document.getElementById("userId").value;
            var exp = /Hello(  )?World/; 
            if(exp.test(userId)){
                alert("검증되었습니다.");
            }else{
                alert("정규표현식에 어긋납니다.");
            }
        }
    </script>
    
    id : <input type="text" id="userId" />
    <button onclick="check();">체크</button>


## 부가적인 기능 함수 search 함수 활용하기 ##
-> 자바스크립트에서 String객체는 search라는 함수를 가지고 있음
-> search 함수의 매개변수에 정규표현식을 활용하여 해당 문자가 포함되어 있는지를
확인할 수 있음
-> search 함수는 매개변수로 입력된 문자 혹은 문자열이 어느 인덱스에 위치하는지를
리턴하는 함수 (존재하지 않을 경우 -1번째 인덱스)
-> 이것을 이용하여 정규표현식을 쓰게 되었을때 표현식에 해당되는 문자가 있으면
0번째 인덱스 이상 값을 리턴하고, 없는 경우에는 -1값을 리턴

ex) search 함수 이해하기

## replace 함수 사용해보기
-> replace함수는 문자열에서 제공하는 기본 메소드
-> 문자열의 있는 값을 다른 값으로 대체하는 메소드

## exec 함수 활용하기
-> ()를 사용하여 그룹화로 만든 데이터를 가져올 수 있음
-> [0]번째에는 정규 표현식으로 만든 데이터 전체를 가져오고
-> [1]번째 부터는 그룹화된 데이터를 가져옴(1번째, 2번째 ... 등등)