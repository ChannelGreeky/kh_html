@ 객체
-> 자바스크립트에서도 객체 사용이 가능

@ 객체 선언 및 호출
-> 객체는 키 값을 사용하여 속성(멤버변수)들을 식별
	(Key:value 형태)
-> 중괄호를 사용하여 객체를 생성
-> '[ ]'(대괄호) 또는 '.'(점)으로 요소를 접근 할 수 있음
-> 속성에 모든 자료형이 올 수 있음
	(함수도 들어갈 수 있음)
-> 객체 내에서 자신의 속성을 호출할 때에는 반드시 this 키워드를 사용
-> 객체의 모든 속성을 출력하려면 for in 문을 사용 해야 함

ex) 선언 하는 방법
var 객체명 = {
	key : value,
	key : value,
	key : value, ...
	
};

ex) 객체 접근하기
	객체명['요소명'];
	또는
	객체명.요소명;

※ for in문에서 사용하려면 [ ] 를 사용 (대괄호)

@ in / with 키워드
-> in : 객체 내부에 해당 속성이 있는지를 확인하는 키워드
	- 있으면 true / 없으면 false
-> with : 객체명을 생략하여 사용할 수 있도록 해주는 키워드

@ 객체 속성 추가 및 삭제
-> 속성 및 함수를 동적으로 추가/삭제 가능

## 추가 ##
객체명.속성명 = '값'; // 속성명이 key가 되고, 값이 value가 됨

객체명.속성명 = function() {
	함수로직
	[return 리턴값;]
};

## 삭제 ##
delete(객체명.속성명);  //속성명은 key (key를 입력하면 해당 key와 value가 삭제 됨)


@ 객체 배열 활용
-> 생성된 객체를 배열에 넣어 활용 가능

var 배열명 = new Array(); //배열 생성 코드

var 객체1 = {key:value, key:value, key:value};
var 객체2 = {key:value, key:value, key:value};
var 객체3 = {key:value, key:value, key:value};

배열에 객체 삽입하기
배열명.push(객체1);
배열명.push(객체2);
배열명.push(객체3);

## 함수를 활용하여 객체의 데이터 넣기 ##
function 함수명 (value1, value2, value3) {
	var 객체명 = {
		key : value,
		key : value,
		key : value,
		...
	};
	return 객체명;
}
