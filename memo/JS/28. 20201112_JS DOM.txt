@ DOM
-> Document Object Model
-> 문서 객체라고 함
-> HTML에 있는 태그를 객체화 하여 자바스크립트에서 다룰 수 있게 한 것
-> 모든 노드객체에 접근할 수 있는 요소와 메소드(함수)를 제공함

@ 노드란?
-> HTML에 있는 태그를 구조화 하였을때 각 각 요소노드, 텍스트 노드, 어트리뷰트 노드로
표현할 수 있음
-> 요소노드 : 태그 그 자체를 의미
-> 텍스트 노드 : 태그에 기록되어 있는 문자
	※ 요소노드 중에는 텍스트 노드를 가지지 않는 태그도 있음
	(ex. img 태그)
-> 어트리뷰트 노드 : 태그의 설정되어 있는 속성을 의미

ex) <a href="http://www.ie.or.kr">Click</a>

a 태그는 	"요소 노드"라고 표현
href 속성은 "어트리뷰트 노드"라고 표현
click 글자는 "텍스트 노드"라고 표현


50억
ST 10억
LW RW : 10억
CAM, CAM : 10억
RB, LB, GK : 3억
CDM : 5억
CB CB : 12억

@ 텍스트 노드가 있는 문서 객체 생성
-> 요소노드와 텍스트노드를 생성하고 이를 body 노드의 자식으로 포함 가능함

document.createElement(태그명)		요소노드 생성
document.createTextNode(내용)		텍스트노드 생성
객체명.appendChild(node)			태그에 자손으로 노드를 추가

## 절차 ##
1. 요소노드를 생성
2. 텍스트 노드를 생성
3. 텍스트 노드에 내용 입력
4. 요소노드에 텍스트 노드를 추가
5. body 객체에 요소노드를 추가


@ 텍스트 노드 없는 문서 객체 생성 및 속성 부여하기
-> 요소노드를 생성하고 속성을 설정

객체명.속성 = 속성값		태그의 속성값을 설정 가능
객체명.setAttribute(속석명, 속성값)	태그의 속성값을 설정 가능(없는 속성도 추가 가능)
객체명.getAttribute(속성명)		태그의 속성값 확인
객체명.get.appendChild(node)	태그에 자손으로 노드를 추가

@ 문서 스타일 수정
-> style 객체를 이용하여 문서의 스타일을 변경

사용방법
객체명.style.속성명 = 속성값;

※ 자바 스크립트에서 식별자에 '-'를 쓰지 못하기 때문에 속성명이 css에서 
쓰는것과는 약간의 명칭 차이가 있음
(ex. background-color -> backgroundColor)

@ 문서객체 제거
-> 페이지내 작성된 문서의 객체(요소)를 제거하는 것

부모객체명.removeChild(객체명)	해당 부모 안에 있는 자손 태그 제거
객체명.remove();			해당 객체를 삭제

@ 객체명.hasChildNode() 함수
-> 객체에 자식노드가 있으면 true 없으면 false